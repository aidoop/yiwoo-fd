(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{1210:function(e,t,n){"use strict";n.r(t);var r,a,i,o,c,d,l=n(1),u=n(74),s=n(140),p=n.n(s),m=n(38),f=n(31),h=n(81),g=n(9),y=n(597);function b(e,t,n,r,a,i,o){try{var c=e[i](o),d=c.value}catch(e){return void n(e)}c.done?t(d):Promise.resolve(d).then(r,a)}function v(e){return function(){var t=this,n=arguments;return new Promise((function(r,a){var i=e.apply(t,n);function o(e){b(i,r,a,o,c,"next",e)}function c(e){b(i,r,a,o,c,"throw",e)}o(void 0)}))}}function w(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function O(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?w(Object(n),!0).forEach((function(t){j(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):w(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function j(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function P(e,t){return t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}class _ extends(Object(u.a)(m.store)(Object(g.b)(g.a)(m.PageView))){static get properties(){return{config:Object,menus:Array}}static get styles(){return Object(l.b)(r||(r=P(["\n      :host {\n        display: flex;\n        overflow-x: hidden;\n        flex-direction: column;\n      }\n\n      data-grist {\n        flex: 1;\n      }\n    "])))}get context(){return{title:g.a.t("text.addon-menu management"),actions:[O({title:g.a.t("button.reload"),action:()=>{this.onReload()}},h.a.refresh),O({title:g.a.t("button.delete"),action:()=>{this.onDelete()}},h.a.delete),O({title:g.a.t("button.save"),action:()=>{this.onCommit()}},h.a.save)],exportable:{accept:["json"],name:"lite-menu-list",data:()=>this.grist.data}}}render(){return Object(l.e)(a||(a=P(["\n      <data-grist\n        .mode=","\n        .config=","\n        .fetchHandler=","\n      ></data-grist>\n    "])),Object(f.j)()?"LIST":"GRID",this.config,this.fetchHandler)}stateChanged(e){var t;this.menus=null===(t=e.liteMenu)||void 0===t?void 0:t.menus}get grist(){return this.shadowRoot.querySelector("data-grist")}onCommit(){var e=this;return v((function*(){var t=e.grist,n=t.dirtyRecords.filter(e=>"M"==e.__dirty__),r=t.dirtyRecords.filter(e=>"+"==e.__dirty__);yield Promise.all(n.map(function(){var e=v((function*(e){var t=e.__origin__.name,n={name:e.name,description:e.description,parent:e.parent,rank:e.rank,active:e.active,type:e.type,value:e.value,icon:e.icon};return yield m.client.mutate({mutation:p()(i||(i=P(["\n            mutation($name: String!, $patch: LiteMenuPatch!) {\n              updateLiteMenu(name: $name, patch: $patch) {\n                id\n                name\n              }\n            }\n          "]))),variables:{name:t,patch:n}})}));return function(t){return e.apply(this,arguments)}}())),yield Promise.all(r.map(function(){var e=v((function*(e){var t={name:e.name,description:e.description,parent:e.parent,rank:e.rank,active:e.active,type:e.type,value:e.value,icon:e.icon};return yield m.client.mutate({mutation:p()(o||(o=P(["\n            mutation($liteMenu: NewLiteMenu!) {\n              createLiteMenu(liteMenu: $liteMenu) {\n                id\n                name\n              }\n            }\n          "]))),variables:{liteMenu:t}})}));return function(t){return e.apply(this,arguments)}}())),t.fetch()}))()}onReload(){this.grist.fetch()}onDelete(){var e=this;return v((function*(){var t=e.grist,n=t.selected;yield Promise.all(n.map(function(){var e=v((function*(e){var t=e.name;return yield m.client.mutate({mutation:p()(c||(c=P(["\n            mutation($name: String!) {\n              deleteLiteMenu(name: $name)\n            }\n          "]))),variables:{name:t}})}));return function(t){return e.apply(this,arguments)}}())),t.fetch()}))()}pageInitialized(){var e=this;return v((function*(){e.config={columns:[{type:"gutter",gutterName:"dirty"},{type:"gutter",gutterName:"sequence"},{type:"gutter",gutterName:"row-selector",multiple:!0},{type:"string",name:"id",hidden:!0},{type:"string",name:"name",header:g.a.t("field.name"),record:{editable:!0},sortable:!0,width:120},{type:"string",name:"description",header:g.a.t("field.description"),record:{align:"left",editable:!0},width:200},{type:"select",name:"parent",header:g.a.t("field.parent-menu"),record:{editable:!0,options:()=>["",...(e.menus||[]).map(e=>e.name)]},sortable:!0,width:120},{type:"number",name:"rank",header:g.a.t("field.rank"),record:{align:"right",editable:!0},sortable:!0,width:60},{type:"select",name:"type",header:g.a.t("field.type"),record:{editable:!0,options:["","page","board"]},width:80},{type:"string",name:"value",header:g.a.t("field.value"),record:{editable:!0,editor:function(e,t,n,r,a){var i="page"==n.type?"string":n.type;return Object(y.c)(i)(e,t,n,r,a)},renderer:function(e,t,n,r,a){var i="page"==n.type?"string":n.type;return Object(y.d)(i)(e,t,n,r,a)}},width:140},{type:"string",name:"icon",header:g.a.t("field.icon"),record:{editable:!0},sortable:!1,width:120},{type:"boolean",name:"active",header:g.a.t("field.active"),record:{editable:!0},sortable:!0,width:60},{type:"datetime",name:"updatedAt",header:g.a.t("field.updated_at"),width:180},{type:"datetime",name:"createdAt",header:g.a.t("field.created_at"),width:180}],rows:{selectable:{multiple:!0},handlers:{click:"select-row-toggle"}},sorters:[{name:"parent",desc:!1},{name:"rank",desc:!1}],pagination:{pages:[20,30,50,100,200]}},e.page=1,e.limit=50,yield e.updateComplete,e.grist.fetch()}))()}pageUpdated(e,t){var n=this;return v((function*(){n.active&&(yield n.updateComplete,n.grist.fetch())}))()}fetchHandler({page:e,limit:t,sorters:n=[]}){return v((function*(){var r=(yield m.client.query({query:p()(d||(d=P(["\n        {\n          liteMenus(",") {\n            items {\n              id\n              name\n              description\n              parent\n              rank\n              type\n              value\n              board {\n                id\n                name\n                description\n                thumbnail\n              }\n              icon\n              active\n              createdAt\n              updatedAt\n              creator {\n                id\n                name\n              }\n              updater {\n                id\n                name\n              }\n            }\n            total\n          }\n        }\n      "])),f.g.buildArgs({filters:[],pagination:{page:e,limit:t},sortings:n}))})).data.liteMenus;return m.store.dispatch({type:"UPDATE_ADDON_MENUS",addon:r.items}),{records:r.items,total:r.total}}))()}}window.customElements.define("addon-menu-setting",_)}}]);