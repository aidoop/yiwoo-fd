(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{1207:function(e,n,t){"use strict";t.r(n);var i,r,a,o,l,d,c,u,s,p,v,h,f,b,g=t(1),m=t(942),y=t(140),k=t.n(y),x=t(963),w=t.n(x),T=t(74),O=t(38),j=(t(934),t(48)),C=t(31);function A(e,n,t,i,r,a,o){try{var l=e[a](o),d=l.value}catch(e){return void t(e)}l.done?n(d):Promise.resolve(d).then(i,r)}function S(e){return function(){var n=this,t=arguments;return new Promise((function(i,r){var a=e.apply(n,t);function o(e){A(a,i,r,o,l,"next",e)}function l(e){A(a,i,r,o,l,"throw",e)}o(void 0)}))}}function I(e,n){return n||(n=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(n)}}))}function P(e){var n,t;function i(n,t){try{var a=e[n](t),o=a.value,l=o instanceof _;Promise.resolve(l?o.wrapped:o).then((function(e){l?i("return"===n?"return":"next",e):r(a.done?"return":"normal",e)}),(function(e){i("throw",e)}))}catch(e){r("throw",e)}}function r(e,r){switch(e){case"return":n.resolve({value:r,done:!0});break;case"throw":n.reject(r);break;default:n.resolve({value:r,done:!1})}(n=n.next)?i(n.key,n.arg):t=null}this._invoke=function(e,r){return new Promise((function(a,o){var l={key:e,arg:r,resolve:a,reject:o,next:null};t?t=t.next=l:(n=t=l,i(e,r))}))},"function"!=typeof e.return&&(this.return=void 0)}function _(e){this.wrapped=e}"function"==typeof Symbol&&Symbol.asyncIterator&&(P.prototype[Symbol.asyncIterator]=function(){return this}),P.prototype.next=function(e){return this._invoke("next",e)},P.prototype.throw=function(e){return this._invoke("throw",e)},P.prototype.return=function(e){return this._invoke("return",e)};var z="\nid\nname\ndescription\nicon\ngrantType\nclientId\nclientSecret\ncallbackUrl\nauthUrl\naccessTokenUrl\nwebhook\nusername\npassword\ncodeChallengeMethod\ncodeVerifier\nscopes\naccessToken\nrefreshToken\njwtToken\nexpires\ntokenType\nupdatedAt\ncreatedAt\n";class U extends(Object(T.a)(O.store)(O.PageView)){static get styles(){return[Object(g.b)(i||(i=I(["\n        :host {\n          display: flex;\n          flex-direction: column;\n          overflow-y: auto;\n          position: relative;\n\n          background-color: var(--main-section-background-color);\n          padding: var(--padding-wide);\n        }\n        h2 {\n          margin: var(--title-margin);\n          font: var(--title-font);\n          color: var(--title-text-color);\n        }\n        [page-description] {\n          margin: var(--page-description-margin);\n          font: var(--page-description-font);\n          color: var(--page-description-color);\n        }\n        [icon] {\n          position: absolute;\n          top: 10px;\n          right: 10px;\n          max-width: 80px;\n        }\n        [icon] img {\n          max-width: 100%;\n          max-height: 100%;\n        }\n\n        [button-primary] {\n          background-color: var(--button-primary-background-color);\n          border: var(--button-border);\n          border-radius: var(--button-border-radius);\n          margin: var(--button-margin);\n          padding: var(--button-primary-padding);\n          color: var(--button-primary-color);\n          font: var(--button-primary-font);\n          text-transform: var(--button-text-transform);\n\n          text-decoration: none;\n        }\n        [button-primary]:hover {\n          background-color: var(--button-primary-active-background-color);\n          box-shadow: var(--button-active-box-shadow);\n        }\n        label {\n          font: var(--label-font);\n          color: var(--label-color);\n          text-transform: var(--label-text-transform);\n        }\n        input,\n        select {\n          border: var(--border-dark-color);\n          border-radius: var(--border-radius);\n          margin: var(--input-margin);\n          padding: var(--input-padding);\n          font: var(--input-font);\n\n          flex: 1;\n        }\n        select:focus,\n        input:focus,\n        button {\n          outline: none;\n        }\n        form {\n          max-width: var(--content-container-max-width);\n        }\n        [fieldset-container] {\n          background-color: var(--theme-white-color);\n          margin: var(--margin-wide) 0 var(--margin-default) 0;\n          padding: var(--padding-default);\n          border-radius: var(--border-radius);\n          box-shadow: var(--box-shadow);\n        }\n        [fieldset-container] fieldset {\n          margin: 0;\n          margin-top: -15px;\n        }\n        fieldset {\n          border-radius: var(--border-radius);\n          border: var(--border-dark-color);\n          margin: var(--fieldset-margin);\n          padding: var(--fieldset-padding);\n        }\n        legend {\n          padding: var(--legend-padding);\n          font-weight: bold;\n          color: var(--legend-color);\n        }\n        [field-2column] {\n          display: grid;\n          grid-template-columns: 1fr 1fr;\n          grid-gap: 15px;\n        }\n        [field] {\n          display: flex;\n          flex-direction: column;\n          position: relative;\n        }\n        [grid-span] {\n          grid-column: span 2;\n        }\n        button,\n        input[type='submit'],\n        [button-in-field] {\n          background-color: var(--button-background-color);\n          border: var(--button-border);\n          border-radius: var(--button-border-radius);\n          padding: var(--button-padding);\n          color: var(--button-color);\n          font: var(--button-font);\n          text-transform: var(--button-text-transform);\n\n          margin: var(--margin-default) 0 var(--margin-default) var(--margin-default);\n          float: right;\n          text-decoration: none;\n        }\n        button:hover,\n        input[type='submit']:hover {\n          border: var(--button-activ-border);\n          box-shadow: var(--button-active-box-shadow);\n        }\n        [button-in-field] {\n          border-radius: 0 var(--button-border-radius) var(--button-border-radius) 0;\n          position: absolute;\n          top: 11px;\n          right: 0;\n          max-height: 36px;\n        }\n        [input-hint] {\n          font: var(--input-hint-font);\n          color: var(--input-hint-color);\n        }\n        @media screen and (max-width: 480px) {\n          [field] {\n            grid-column: span 2;\n          }\n        }\n      "])))]}static get properties(){return{oauth2Client:Object,_grantType:String}}get context(){var e;return{title:{icon:"apps",text:null===(e=this.oauth2Client)||void 0===e?void 0:e.name}}}render(){var e=this,n=this.oauth2Client||{};return Object(g.e)(r||(r=I(["\n      <div>\n        <h2><mwc-icon>apps</mwc-icon>&nbsp;","</h2>\n        <p page-description>","</p>\n      </div>\n\n      <div icon>\n        <img src=",">\n      </div>\n\n      <form>\n        <div fieldset-container>\n          <fieldset>\n            <legend>oauth2 client</legend>\n            <div field-2column>\n              <div field grid-span>\n                <label for='name'>name</label>\n                <input type='text' id=\"name\" name=\"name\" .value=",">\n              </div>\n\n              <div field grid-span>\n                <label for='description'>description</label>\n                <input type='text' id=\"description\" name=\"description\" .value=",">\n              </div>\n\n              <div field grid-span>\n                <label for='icon'>icon</label>\n                <input type='text' id=\"icon\" name=\"icon\" \n                  @change="," \n                  .value=","\n                >\n              </div>\n            </div>\n          </fieldset>\n        </div>\n\n        <div fieldset-container>\n          <fieldset>\n            <legend>authorization</legend>\n            <div field-2column>\n              <div field grid-span>\n                <label for='grant-type'>grant type\n                  <help-icon topic='/oauth2-client/grant-type'></help-icon>\n                </label>\n                <select type='text' id=\"grant-type\" name=\"grantType\" .value="," \n                  @change=",">\n                  <option></option>\n                  <option value='code'>Authorization Code Grant</option>\n                  <option value='jwt'>JWT As Authorization Grant</option>\n                  <option value='owner'>Resource Owner Password Credentials Grant</option>\n                  <option value='credentials'>Client Credentials Grant</option>\n                </select>\n              </div>\n\n              <div field grid-span>\n                <label for='auth-url'>auth url</label>\n                <input type='text' id=\"auth-url\" name=\"authUrl\" .value=",">\n                <div input-hint>The endpoint for authorization server. This is used to get the authorization code.</div>\n              </div>\n\n              <div field grid-span>\n                <label for='access-token-url'>access token url</label>\n                <input type='text' id=\"access-token-url\" name=\"accessTokenUrl\" .value=",">\n                <div input-hint>The endpoint for authentication server. This is used to exchange the authorization code for an access token.</div>\n              </div>\n\n              <div field grid-span>\n                <label for='callback-url'>callback url</label>\n                <input type='text' id=\"callback-url\" name=\"callbackUrl\" .value=",">\n                <div input-hint>This is the callback url that you will be redirected to, after your application is authorized.\n                This is used to extract the authorization code or access token.\n                Normally, this callback url should match the one you use during the application registration process.\n                If you leave this field empty, default callback url(","/oauth2-client/callback</label>) will be used.</div>\n              </div>\n              \n              <div field grid-span>\n                <label for='client-id'>client id</label>\n                <input type='text' id=\"client-id\" name=\"clientId\" .value=",">\n                <div input-hint>The client identifier issued to the client during the application registration process.</div>\n              </div>\n\n              <div field grid-span>\n                <label for='client-secret'>client secret</label>\n                <input type='text' id=\"client-secret\" name=\"clientSecret\" .value=",">\n                <div input-hint>The client secret issued to the client during the application registration process.</div>\n              </div>\n\n              ","\n\n              ","\n\n              \x3c!-- code PKCE grant type not supported yet\n              <div field grid-span>\n                <label for='code-challenge-method'>code challenge method</label>\n                <select type='text' id=\"code-challenge-method\" name=\"codeChallengeMethod\" .value=",">\n                  <option></option>\n                  <option>SHA-256</option>\n                  <option>Plain</option>\n                </select>\n                <div input-hint>Algorithm used for generating the code challenge</div>\n              </div>\n\n              <div field grid-span>\n                <label for='code-verifier'>code verifier\n                  <help-icon topic='/oauth2-client/code-verifier'></help-icon>\n                </label>\n                <input type='text' id=\"code-verifier\" name=\"codeVerifier\" .value=",'>\n                <div input-hint>A random, 43-128 character string used to connect the authorization request to the token request.\n                Uses the following characters: [A-Z]/[a-z]/[0-9]/"-"/"."/"_"/"~".</div>\n              </div>\n              --\x3e\n              \n              <div field grid-span>\n                <label for=\'scopes\'>scopes</label>\n                <input type=\'text\' id="scopes" name="scopes" .value=',">\n                <div input-hint>The scopes of the access request. It may have multiple space-delimited values.</div>\n              </div>\n            </div>\n          </fieldset>\n        </div>\n\n        <div fieldset-container>\n          <fieldset>\n            <div field grid-span>\n              <label for='token-type'>token type</label>\n              <input type='text' id=\"token-type\" .value=",' readonly>\n              <div input-hint>Added to the authorization header before the access token.</div>\n            </div>\n\n            <legend>access token</legend>\n            <div field-2column>\n              <div field grid-span>\n                <label for="access-token">access token</label>\n                <input id="access-token" type="text" .value='," readonly />\n                <button button-in-field clipboard-copy @click=",">copy</button>\n                ",'\n              </div>\n\n              <div field grid-span>\n                <label for="refresh-token">refresh token</label>\n                <input id="refresh-token" type="text" .value='," readonly />\n                <button button-in-field clipboard-copy @click=",">copy</button>\n              </div>\n            </div>\n          </fieldset>\n        </div>\n\n        <button @click=",">delete this app</button>\n        <button @click=",">get new access token</button>\n        <button @click="," ?disabled=",'>refresh access token</button>\n        <input type="submit" value="update" @click=',">\n      </form>\n    "])),n.name||"",n.description||"",n.icon,n.name||"",n.description||"",e=>this._icon=e.target.value,n.icon||"",n.grantType||"code",e=>this._grantType=e.target.value,n.authUrl||"",n.accessTokenUrl||"",n.callbackUrl||"",location.origin,n.clientId||"",n.clientSecret||"","owner"==this._grantType?Object(g.e)(a||(a=I(['\n                      <div field grid-span>\n                        <label for="username">user name</label>\n                        <input type="text" id="username" name="username" .value=',' />\n                      </div>\n\n                      <div field grid-span>\n                        <label for="password">password</label>\n                        <input type="password" id="password" name="password" .value='," />\n                      </div>\n                    "])),n.username||"",n.password||""):Object(g.e)(o||(o=I([""]))),"jwt"==this._grantType?Object(g.e)(l||(l=I(['\n                      <div field grid-span>\n                        <label for="jwt-token">jwt-token</label>\n                        <input type="text" id="jwt-token" name="jwtToken" .value='," />\n                        <div input-hint>The JWT Bearer Token for JWT As Authorization Grant</div>\n                      </div>\n                    "])),n.jwtToken||""):Object(g.e)(d||(d=I([""]))),n.codeChallengeMethod,n.codeVerifier||"",n.scopes||"",n.tokenType||"",n.accessToken||"",e=>e.preventDefault(),n.expires?Object(g.e)(c||(c=I(["<div input-hint>\n                        expired in "," :\n                        ","\n                      </div>"])),new Date(Number(n.expires)),Object(m.a)(this.expTimer(n.expires))):Object(g.e)(u||(u=I([""]))),n.refreshToken||"",e=>e.preventDefault(),e=>this.deleteOauth2Client(e),function(){var n=S((function*(n){n.preventDefault(),yield e.updateOauth2Client(),yield e.generateOauth2AccessToken()}));return function(e){return n.apply(this,arguments)}}(),function(){var n=S((function*(n){n.preventDefault(),yield e.updateOauth2Client(),yield e.refreshOauth2AccessToken()}));return function(e){return n.apply(this,arguments)}}(),!n.refreshToken,function(){var n=S((function*(n){n.preventDefault(),yield e.updateOauth2Client()}));return function(e){return n.apply(this,arguments)}}())}updated(e){var n;e.has("oauth2Client")&&(this._grantType=null===(n=this.oauth2Client)||void 0===n?void 0:n.grantType)}firstUpdated(){var e=this.renderRoot.querySelectorAll("[clipboard-copy]");this.clipboard=new w.a(e,{target:e=>e.parentElement.querySelector("input")})}pageUpdated(e,n,t){var i=this;return S((function*(){i.active&&(yield i.fetchOauth2Client())}))()}expTimer(e){var n,t=this;return(n=function*(){for(var n;t.active;){var i=Math.floor((Number(e)-Date.now())/1e3),r=Math.floor(i/86400);i-=86400*r;var a=Math.floor(i/3600);i-=3600*a;var o=Math.floor(i/60),l=i-60*o;yield"".concat(r," days ").concat(a," hours ").concat(o," mins ").concat(l," seconds remain"),yield(n=Object(C.m)(1e3),new _(n))}},function(){return new P(n.apply(this,arguments))})()}fetchOauth2Client(){var e=this;return S((function*(){var n=yield O.client.query({query:k()(s||(s=I(["\n        query($id: String!) {\n          oauth2Client(id: $id) {\n            ","\n          }\n        }\n      "])),z),variables:{id:e.lifecycle.resourceId}});e.oauth2Client=n.data.oauth2Client}))()}updateOauth2Client(){var e=this;return S((function*(){var n=e.renderRoot.querySelector("form"),t=new FormData(n),i=Array.from(t.entries()).reduce((e,[n,t])=>(e[n]=t,e),{}),r=e.lifecycle.resourceId,a=yield O.client.mutate({mutation:k()(p||(p=I(["\n        mutation($id: String!, $patch: Oauth2ClientPatch!) {\n          updateOauth2Client(id: $id, patch: $patch) {\n            ","\n          }\n        }\n      "])),z),variables:{id:r,patch:i}});a.errors?Object(j.h)({level:"error",message:"update oauth2 client fail"}):e.oauth2Client=a.data.updateOauth2Client}))()}deleteOauth2Client(e){var n=this;return S((function*(){e.preventDefault();var t=n.lifecycle.resourceId;(yield O.client.mutate({mutation:k()(v||(v=I(["\n        mutation($id: String!) {\n          deleteOauth2Client(id: $id)\n        }\n      "]))),variables:{id:t}})).errors?Object(j.h)({level:"error",message:"delete oauth2 client fail"}):Object(O.navigate)("oauth2-clients")}))()}generateOauth2AccessToken(){var e=this;return S((function*(){e.lifecycle.resourceId;if("code"==e.oauth2Client.grantType){var n=yield O.client.query({query:k()(h||(h=I(["\n          query($id: String!) {\n            getOauth2AuthUrl(id: $id)\n          }\n        "]))),variables:{id:e.lifecycle.resourceId}});n.errors?(console.log("error",n.status,yield n.text()),Object(j.h)({level:"error",message:"getting application access token fail"})):location.href=n.data.getOauth2AuthUrl}else{var t=yield O.client.mutate({mutation:k()(f||(f=I(["\n          mutation($id: String!) {\n            getOauth2AccessToken(id: $id) {\n              ","\n            }\n          }\n        "])),z),variables:{id:e.lifecycle.resourceId}});t.errors?Object(j.h)({level:"error",message:"getting application access token fail"}):(e.oauth2Client=t.data.getOauth2AccessToken,Object(j.h)({level:"info",message:"got application access token successfully"}))}}))()}refreshOauth2AccessToken(){var e=this;return S((function*(){e.lifecycle.resourceId;var n=yield O.client.mutate({mutation:k()(b||(b=I(["\n        mutation($id: String!) {\n          refreshOauth2AccessToken(id: $id) {\n            ","\n          }\n        }\n      "])),z),variables:{id:e.lifecycle.resourceId}});n.errors?Object(j.h)({level:"error",message:"getting application access token fail"}):(e.oauth2Client=n.data.refreshOauth2AccessToken,Object(j.h)({level:"info",message:"got application access token successfully"}))}))()}}customElements.define("oauth2-client",U)},942:function(e,n,t){"use strict";t.d(n,"a",(function(){return o}));var i=t(5);function r(e,n,t,i,r,a,o){try{var l=e[a](o),d=l.value}catch(e){return void t(e)}l.done?n(d):Promise.resolve(d).then(i,r)}
/**
 * @license
 * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at
 * http://polymer.github.io/LICENSE.txt
 * The complete set of authors may be found at
 * http://polymer.github.io/AUTHORS.txt
 * The complete set of contributors may be found at
 * http://polymer.github.io/CONTRIBUTORS.txt
 * Code distributed by Google as part of the polymer project is also
 * subject to an additional IP rights grant found at
 * http://polymer.github.io/PATENTS.txt
 */
var a=function(e){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var n,t=e[Symbol.asyncIterator];return t?t.call(e):(e="function"==typeof __values?__values(e):e[Symbol.iterator](),n={},i("next"),i("throw"),i("return"),n[Symbol.asyncIterator]=function(){return this},n);function i(t){n[t]=e[t]&&function(n){return new Promise((function(i,r){(function(e,n,t,i){Promise.resolve(i).then((function(n){e({value:n,done:t})}),n)})(i,r,(n=e[t](n)).done,n.value)}))}}},o=Object(i.f)((e,n)=>function(){var t,o=(t=function*(t){var r,o;if(!(t instanceof i.d))throw new Error("asyncReplace can only be used in text bindings");if(e!==t.value){var l=new i.d(t.options);t.value=e;var d=0;try{for(var c,u=a(e);!(c=yield u.next()).done;){var s=c.value;if(t.value!==e)break;0===d&&(t.clear(),l.appendIntoPart(t)),void 0!==n&&(s=n(s,d)),l.setValue(s),l.commit(),d++}}catch(e){r={error:e}}finally{try{c&&!c.done&&(o=u.return)&&(yield o.call(u))}finally{if(r)throw r.error}}}},function(){var e=this,n=arguments;return new Promise((function(i,a){var o=t.apply(e,n);function l(e){r(o,i,a,l,d,"next",e)}function d(e){r(o,i,a,l,d,"throw",e)}l(void 0)}))});return function(e){return o.apply(this,arguments)}}())}}]);