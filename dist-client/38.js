(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{1229:function(e,n,t){"use strict";t.r(n);var i,a,o,l,r,d,c=t(38),s=t(1),u=(t(74),t(49),t(292),t(140));function p(e,n,t,i,a,o,l){try{var r=e[o](l),d=r.value}catch(e){return void t(e)}r.done?n(d):Promise.resolve(d).then(i,a)}function m(e){return function(){var n=this,t=arguments;return new Promise((function(i,a){var o=e.apply(n,t);function l(e){p(o,i,a,l,r,"next",e)}function r(e){p(o,i,a,l,r,"throw",e)}l(void 0)}))}}function f(e,n){return n||(n=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(n)}}))}var b=t.n(u)()(i||(i=f(["\n  mutation($attachments: [NewAttachment]!) {\n    createAttachments(attachments: $attachments) {\n      id\n      name\n      description\n      mimetype\n      encoding\n      category\n      path\n      createdAt\n      updatedAt\n    }\n  }\n"])));class h extends s.a{static get styles(){return[Object(s.b)(a||(a=f([void 0],["\n        :host {\n          flex: 1;\n          display: flex;\n          flex-direction: column;\n          position: relative;\n          overflow: hidden;\n        }\n\n        #input-box {\n          display: flex;\n        }\n\n        .filebox input[type='file'] {\n          position: absolute;\n          width: 1px;\n          height: 1px;\n          padding: 0;\n          margin: -1px;\n          overflow: hidden;\n          clip: rect(0, 0, 0, 0);\n          border: 0;\n        }\n        .filebox label {\n          padding: 0.5em 0.75em;\n          color: #999;\n          font-size: inherit;\n          line-height: normal;\n          vertical-align: middle;\n          background-color: #fdfdfd;\n          cursor: pointer;\n          border: 1px solid #ebebeb;\n          border-bottom-color: #e2e2e2;\n          border-radius: 0.25em;\n        }\n        /* named upload */\n        .filebox .upload-name {\n          flex: 1;\n          padding: 0.5em 0.75em; /* label의 패딩값과 일치 */\n          font-size: inherit;\n          font-family: inherit;\n          line-height: normal;\n          vertical-align: middle;\n          background-color: #f5f5f5;\n          border: 1px solid #ebebeb;\n          border-bottom-color: #e2e2e2;\n          border-radius: 0.25em;\n          -webkit-appearance: none; /* 네이티브 외형 감추기 */\n          -moz-appearance: none;\n          appearance: none;\n        }\n\n        /* imaged preview */\n        .filebox .upload-display {\n          /* 이미지가 표시될 지역 */\n          margin-bottom: 5px;\n        }\n\n        .filebox .upload-thumb-wrap {\n          /* 추가될 이미지를 감싸는 요소 */\n          display: inline-block;\n          width: 54px;\n          padding: 2px;\n          vertical-align: middle;\n          border: 1px solid #ddd;\n          border-radius: 5px;\n          background-color: #fff;\n        }\n        .filebox .upload-display img {\n          /* 추가될 이미지 */\n          display: block;\n          max-width: 100%;\n          width: 100% \\9;\n          height: auto;\n        }\n      "])))]}static get properties(){return{label:String,showFilename:{type:Boolean,attribute:"show-filename"},_files:Array}}constructor(){super(),this._files=[]}render(){return Object(s.e)(o||(o=f(['\n      <div class="filebox preview-image">\n        <div class="upload-display">\n          ','\n        </div>\n        <div id="input-box">\n          ','\n          <label for="input-file"><mwc-icon>add_photo_alternate</mwc-icon></label>\n          <input\n            id="input-file"\n            type="file"\n            accept="image/*;"\n            class="upload-hidden"\n            multiple\n            @change=','\n          />\n        </div>\n      </div>\n      <mwc-icon-button\n        icon="cloud_upload"\n        ?disabled=',"\n        @click=","\n      ></mwc-icon-button>\n    "])),this._files.map(e=>Object(s.e)(l||(l=f(['\n              <div class="upload-thumb-wrap">\n                <mwc-icon-button\n                  icon="remove_circle_outline"\n                  @click=','\n                ></mwc-icon-button>\n                <img class="upload-thumb" src="','" />\n              </div>\n            '])),n=>{this._files=this._files.filter(n=>n!=e)},window.URL.createObjectURL(e))),this.showFilename?Object(s.e)(r||(r=f(['\n                <input\n                  class="upload-name"\n                  value="','"\n                  disabled\n                />\n              '])),this._files.map(e=>e.name).join(", ")||this.label||"select image"):Object(s.e)(d||(d=f([""]))),e=>{this.onImageFileChanged(e)},0==this._files.length,e=>{e.currentTarget.hasAttribute("disabled")||this._onUploadButtonClick(e)})}get fileInput(){return this.renderRoot.querySelector("#input-file")}onImageFileChanged(e){this._files=[...this._files,...Array.from(e.currentTarget.files)]}_onUploadButtonClick(e){var n=this;return m((function*(){var e=yield n.createAttachments("",n._files),{createAttachments:t}=e.data;0!=t.length&&(n._files=[],n.fileInput.value="",n.dispatchEvent(new CustomEvent("image-upload-succeeded",{bubbles:!0,composed:!0,detail:{files:t}})))}))()}createAttachments(e,n){return m((function*(){return yield c.client.mutate({mutation:b,variables:{attachments:n.map(n=>({category:e,file:n}))},context:{hasUpload:!0}})}))()}}window.customElements.define("image-uploader",h);var g,v=t(9);class w extends c.PageView{static get properties(){return{imageUploaderUi:String}}render(){return Object(s.e)(g||(e=["\n      <section>\n        <h2>ImageUploaderUi</h2>\n        <image-uploader\n          @image-upload-succeeded=","\n        ></image-uploader>\n      </section>\n    "],n||(n=e.slice(0)),g=Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(n)}}))),e=>{var{files:n}=e.detail,t=Array.from(n).length,i=v.a.t("text.image upload succeeded",{count:t});document.dispatchEvent(new CustomEvent("notify",{detail:{level:"info",message:i}})),console.log(i)});var e,n}}window.customElements.define("image-uploader-ui-test",w)}}]);