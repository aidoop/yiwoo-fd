(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{1215:function(n,e,i){"use strict";i.r(e);var t,a,r,o,p,d=i(1),l=i(140),c=i.n(l),s=i(74),u=i(38);function g(n,e,i,t,a,r,o){try{var p=n[r](o),d=p.value}catch(n){return void i(n)}p.done?e(d):Promise.resolve(d).then(t,a)}function m(n,e){return e||(e=n.slice(0)),Object.freeze(Object.defineProperties(n,{raw:{value:Object.freeze(e)}}))}class f extends(Object(s.a)(u.store)(u.PageView)){static get styles(){return[Object(d.b)(t||(t=m(["\n        :host {\n          background-color: var(--main-section-background-color);\n          padding: var(--padding-wide);\n\n          position: relative;\n\n          overflow: auto;\n        }\n        h2 {\n          margin: var(--title-margin);\n          font: var(--title-font);\n          color: var(--title-text-color);\n        }\n        [page-description] {\n          margin: var(--page-description-margin);\n          font: var(--page-description-font);\n          color: var(--page-description-color);\n        }\n        [icon] {\n          position: absolute;\n          top: 10px;\n          right: 10px;\n\n          max-width: 80px;\n        }\n        [icon] img {\n          max-width: 100%;\n          max-height: 100%;\n        }\n\n        img[pagedeco] {\n          width: 150px;\n          margin: 0 var(--margin-wide);\n          float: left;\n          position: relative;\n          top: -20px;\n        }\n\n        [form-container] {\n          background-color: var(--theme-white-color);\n          padding: var(--padding-wide);\n          border-radius: var(--border-radius);\n          box-shadow: var(--box-shadow);\n          max-width: var(--input-container-max-width);\n          position: relative;\n          top: -50px;\n          clear: both;\n        }\n        label {\n          font: var(--label-font);\n          color: var(--label-color);\n          text-transform: var(--label-text-transform);\n        }\n        input {\n          border: var(--border-dark-color);\n          border-radius: var(--border-radius);\n          margin: var(--input-margin);\n          padding: var(--input-padding);\n          font: var(--input-font);\n\n          flex: 1;\n        }\n        select:focus,\n        input:focus {\n          outline: none;\n        }\n        [field-2column] {\n          display: grid;\n          grid-template-columns: 1fr 1fr;\n          grid-gap: 15px;\n        }\n        [field] {\n          display: flex;\n          flex-direction: column;\n        }\n        [grid-span] {\n          grid-column: span 2;\n        }\n        @media screen and (max-width: 480px) {\n          img[pagedeco] {\n            display: none;\n          }\n          [form-container] {\n            position: initial;\n          }\n          [field] {\n            grid-column: span 2;\n          }\n        }\n      "])))]}static get properties(){return{application:Object,_icon:String}}get context(){return{title:"application registration"}}render(){return Object(d.e)(a||(a=m(['\n      <img src="/assets/images/image-api.png" pagedeco />\n      <h2>Register new application</h2>\n      <p page-description>You can register new application here.<br/>\n      What type of app are you building?\nChoose the app type that best suits the audience youâ€™re building for.\n      </p>\n\n      ','\n\n      <div form-container>\n        <form>\n          <div field-2column>\n            <div field grid-span>\n              <label for="name">name</label>\n              <input id="name" type="text" name="name" />\n            </div>\n\n            <div field grid-span>\n              <label for="description">description</label>\n              <input id="description" type="text" name="description" />\n            </div>\n\n            <div field grid-span>\n              <label for="app-url">application url</label>\n              <input id="app-url" type="text" name="url" />\n            </div>\n\n            <div field grid-span>\n              <label for="redirect-url">redirectUrl</label>\n              <input id="redirect-url" type="text" name="redirectUrl" />\n            </div>\n\n            <div field grid-span>\n              <label for="icon">application icon</label>\n              <input id="icon" type="text" name="icon" @change=',' />\n            </div>\n\n            <div field grid-span>\n              <label for="email">contact email</label>\n              <input id="email" type="text" name="email" />\n            </div>\n\n            <mwc-button grid-span @click=',' raised label="register"></mwc-button>\n          </div>\n        </form>\n      </div>\n    '])),this._icon?Object(d.e)(r||(r=m(["\n            <div icon>\n              <img src="," />\n            </div>\n          "])),this._icon):Object(d.e)(o||(o=m([""]))),n=>this._icon=n.target.value,this.createApplication.bind(this))}createApplication(n){var e,i=this;return(e=function*(){n.preventDefault();var e=i.renderRoot.querySelector("form"),t=new FormData(e),a=Array.from(t.entries()).reduce((n,[e,i])=>(n[e]=i,n),{}),r=yield u.client.mutate({mutation:c()(p||(p=m(["\n        mutation($application: NewApplication!) {\n          createApplication(application: $application) {\n            id\n          }\n        }\n      "]))),variables:{application:a}});if(r.errors)console.log("creation fail.");else{var o=r.data.createApplication.id;Object(u.navigate)("application/".concat(o))}},function(){var n=this,i=arguments;return new Promise((function(t,a){var r=e.apply(n,i);function o(n){g(r,t,a,o,p,"next",n)}function p(n){g(r,t,a,o,p,"throw",n)}o(void 0)}))})()}updated(n){n.has("application")}stateChanged(n){}pageInitialized(n){}pageUpdated(n,e,i){this.active&&(this.renderRoot.querySelector("form").reset(),this.itemId=e.resourceId,this.params=e.params)}pageDisposed(n){}}customElements.define("application-register",f)}}]);